{
  "openapi": "3.1.0",
  "info": {
    "title": "HotPayments",
    "version": "1.0.0",
    "description": "This is the API documentation for our application. It provides detailed information about the available endpoints, request parameters, and response formats. Use this documentation to understand how to interact with our API effectively."
  },
  "servers": [
    {
      "url": "https://hotpayments.net/api"
    }
  ],
  "security": [
    {
      "http": []
    }
  ],
  "paths": {
    "/v1/customers": {
      "post": {
        "operationId": "v1.customer.create",
        "description": "Allows you to create a new customer for your company. Customers are the ones who make the payments",
        "summary": "Create a new customer",
        "tags": [
          "Customer"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "integer"
                        },
                        "document": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "email",
                        "phone_number",
                        "document"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  },
                  "required": [
                    "success",
                    "message"
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "v1.customer.list",
        "description": "Allows you to list all customers for your company.",
        "summary": "List all customers",
        "tags": [
          "Customer"
        ],
        "responses": {
          "200": {
            "description": "Paginated set of `Customer`",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "current_page": {
                      "type": "integer"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Customer"
                      }
                    },
                    "first_page_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "from": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    },
                    "last_page_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "last_page": {
                      "type": "integer"
                    },
                    "links": {
                      "type": "array",
                      "description": "Generated paginator links.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "url": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "label": {
                            "type": "string"
                          },
                          "active": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "url",
                          "label",
                          "active"
                        ]
                      }
                    },
                    "next_page_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Base path for paginator generated URLs."
                    },
                    "per_page": {
                      "type": "integer",
                      "description": "Number of items shown per page."
                    },
                    "prev_page_url": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "to": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "description": "Number of the last item in the slice."
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of items being paginated."
                    }
                  },
                  "required": [
                    "current_page",
                    "data",
                    "first_page_url",
                    "from",
                    "last_page_url",
                    "last_page",
                    "links",
                    "next_page_url",
                    "path",
                    "per_page",
                    "prev_page_url",
                    "to",
                    "total"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/subscribe": {
      "post": {
        "operationId": "v1.subscriptions.subscribe",
        "description": "Creates a new subscription for a customer with the specified plan and payment method.\nSupports PIX and other payment methods. PIX payments do not support trial periods.",
        "summary": "Create Subscription",
        "tags": [
          "Subscriptions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "current_period_start": {
                              "type": "string"
                            },
                            "current_period_end": {
                              "type": "string"
                            },
                            "trial_end": {
                              "type": "string"
                            },
                            "next_billing_at": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "setup_fee": {
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "status",
                            "current_period_start",
                            "current_period_end",
                            "trial_end",
                            "next_billing_at",
                            "price",
                            "setup_fee",
                            "created_at"
                          ]
                        },
                        "transaction": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "method": {
                              "type": "string"
                            },
                            "amount": {
                              "type": "number"
                            },
                            "fee": {
                              "type": "number"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "expires_at": {
                              "type": "string"
                            },
                            "qr_code": {
                              "type": "string"
                            },
                            "br_code": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "method",
                            "amount",
                            "fee",
                            "created_at",
                            "status"
                          ]
                        }
                      },
                      "required": [
                        "subscription"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/subscriptions/{subscription}": {
      "get": {
        "operationId": "v1.subscriptions.show",
        "description": "Retrieves detailed information about a specific subscription including\nsubscription plan details and associated transactions.",
        "summary": "Show Subscription Details",
        "tags": [
          "Subscriptions"
        ],
        "parameters": [
          {
            "name": "subscription",
            "in": "path",
            "required": true,
            "description": "The Id of the subscription to retrieve.",
            "schema": {
              "type": "string"
            },
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "current_period_start": {
                              "type": "string"
                            },
                            "current_period_end": {
                              "type": "string"
                            },
                            "trial_end": {
                              "type": "string"
                            },
                            "next_billing_at": {
                              "type": "string"
                            },
                            "billing_cycle_count": {
                              "type": "integer"
                            },
                            "failed_payment_count": {
                              "type": "integer"
                            },
                            "price": {
                              "type": "number"
                            },
                            "setup_fee": {
                              "type": "number"
                            },
                            "started_at": {
                              "type": "string"
                            },
                            "cancelled_at": {
                              "type": "string"
                            },
                            "suspended_at": {
                              "type": "string"
                            },
                            "cancel_reason": {
                              "type": "string"
                            },
                            "created_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uuid",
                            "status",
                            "current_period_start",
                            "current_period_end",
                            "trial_end",
                            "next_billing_at",
                            "billing_cycle_count",
                            "failed_payment_count",
                            "price",
                            "setup_fee",
                            "started_at",
                            "cancelled_at",
                            "suspended_at",
                            "cancel_reason",
                            "created_at",
                            "updated_at"
                          ]
                        },
                        "plan": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "setup_fee": {
                              "type": "number"
                            },
                            "interval_type": {
                              "type": "string"
                            },
                            "interval_count": {
                              "type": "integer"
                            },
                            "billing_cycles": {
                              "type": "string"
                            },
                            "trial_period_days": {
                              "type": "string"
                            },
                            "grace_period_days": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uuid",
                            "name",
                            "description",
                            "price",
                            "setup_fee",
                            "interval_type",
                            "interval_count",
                            "billing_cycles",
                            "trial_period_days",
                            "grace_period_days"
                          ]
                        },
                        "transactions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "uuid": {
                                "type": "string"
                              },
                              "amount": {
                                "type": "number"
                              },
                              "status": {
                                "type": "string"
                              },
                              "period_start": {
                                "type": "string"
                              },
                              "period_end": {
                                "type": "string"
                              },
                              "due_date": {
                                "type": "string"
                              },
                              "processed_at": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "transaction": {
                                "type": "object",
                                "properties": {
                                  "uuid": {
                                    "type": "string"
                                  },
                                  "method": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string"
                                  },
                                  "original_amount": {
                                    "type": "number"
                                  },
                                  "fee": {
                                    "type": "number"
                                  },
                                  "reference": {
                                    "type": "string"
                                  },
                                  "created_at": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "uuid",
                                  "method",
                                  "status",
                                  "original_amount",
                                  "fee",
                                  "reference",
                                  "created_at"
                                ]
                              }
                            },
                            "required": [
                              "uuid",
                              "amount",
                              "status",
                              "period_start",
                              "period_end",
                              "due_date",
                              "processed_at",
                              "created_at",
                              "transaction"
                            ]
                          }
                        }
                      },
                      "required": [
                        "subscription",
                        "plan",
                        "transactions"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/{subscription}/cancel": {
      "post": {
        "operationId": "v1.subscriptions.cancel",
        "description": "Cancels an active subscription with an optional reason.\nThe subscription will remain active until the end of the current billing period.",
        "summary": "Cancel Subscription",
        "tags": [
          "Subscriptions"
        ],
        "parameters": [
          {
            "name": "subscription",
            "in": "path",
            "required": true,
            "description": "The Id of the subscription to cancel.",
            "schema": {
              "type": "string"
            },
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "cancelled_at": {
                              "type": "string"
                            },
                            "cancel_reason": {
                              "type": "string"
                            },
                            "current_period_end": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uuid",
                            "status",
                            "cancelled_at",
                            "cancel_reason",
                            "current_period_end",
                            "updated_at"
                          ]
                        }
                      },
                      "required": [
                        "subscription"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/subscriptions/{subscription}/suspend": {
      "post": {
        "operationId": "v1.subscriptions.suspend",
        "description": "Suspends an active subscription with an optional reason.\nSuspended subscriptions can be reactivated later.",
        "summary": "Suspend Subscription",
        "tags": [
          "Subscriptions"
        ],
        "parameters": [
          {
            "name": "subscription",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SuspendSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "suspended_at": {
                              "type": "string"
                            },
                            "cancel_reason": {
                              "type": "string"
                            },
                            "current_period_end": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uuid",
                            "status",
                            "suspended_at",
                            "cancel_reason",
                            "current_period_end",
                            "updated_at"
                          ]
                        }
                      },
                      "required": [
                        "subscription"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/subscriptions/{subscription}/reactivate": {
      "post": {
        "operationId": "v1.subscriptions.reactivate",
        "description": "Reactivates a suspended subscription, making it active again.\nCannot reactivate cancelled subscriptions.",
        "summary": "Reactivate Subscription",
        "tags": [
          "Subscriptions"
        ],
        "parameters": [
          {
            "name": "subscription",
            "in": "path",
            "required": true,
            "description": "Subscription to reactivate",
            "schema": {
              "type": "string"
            },
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "subscription": {
                          "type": "object",
                          "properties": {
                            "uuid": {
                              "type": "string"
                            },
                            "status": {
                              "type": "string"
                            },
                            "suspended_at": {
                              "type": "string"
                            },
                            "cancel_reason": {
                              "type": "string"
                            },
                            "current_period_start": {
                              "type": "string"
                            },
                            "current_period_end": {
                              "type": "string"
                            },
                            "next_billing_at": {
                              "type": "string"
                            },
                            "updated_at": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "uuid",
                            "status",
                            "suspended_at",
                            "cancel_reason",
                            "current_period_start",
                            "current_period_end",
                            "next_billing_at",
                            "updated_at"
                          ]
                        }
                      },
                      "required": [
                        "subscription"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/subscriptions/plans": {
      "get": {
        "operationId": "v1.subscriptions.plans.list",
        "description": "Retrieves a paginated list of all active subscription plans for your company.\nSupports filtering by currency and pagination parameters.",
        "summary": "List Subscription Plans",
        "tags": [
          "Subscriptions Plans"
        ],
        "parameters": [
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of items per page (1-50)",
            "schema": {
              "type": "integer"
            },
            "example": 15
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer"
            },
            "example": 1
          },
          {
            "name": "currency",
            "in": "query",
            "description": "Currency code to filter plans",
            "schema": {
              "type": "string"
            },
            "example": "BRL"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "current_page": {
                          "type": "integer"
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "reference": {
                                "type": "string"
                              },
                              "price": {
                                "type": "number"
                              },
                              "setup_fee": {
                                "type": "number"
                              },
                              "interval_type": {
                                "type": "string"
                              },
                              "interval_count": {
                                "type": "integer"
                              },
                              "billing_cycles": {
                                "type": "string"
                              },
                              "trial_period_days": {
                                "type": "string"
                              },
                              "grace_period_days": {
                                "type": "string"
                              },
                              "auto_charge": {
                                "type": "boolean"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "description",
                              "reference",
                              "price",
                              "setup_fee",
                              "interval_type",
                              "interval_count",
                              "billing_cycles",
                              "trial_period_days",
                              "grace_period_days",
                              "auto_charge",
                              "name"
                            ]
                          }
                        },
                        "first_page_url": {
                          "type": "string"
                        },
                        "from": {
                          "type": "string"
                        },
                        "last_page": {
                          "type": "integer"
                        },
                        "last_page_url": {
                          "type": "string"
                        },
                        "links": {
                          "type": "array",
                          "items": {}
                        },
                        "next_page_url": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "per_page": {
                          "type": "integer"
                        },
                        "prev_page_url": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "total": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "current_page",
                        "data",
                        "first_page_url",
                        "from",
                        "last_page",
                        "last_page_url",
                        "links",
                        "next_page_url",
                        "path",
                        "per_page",
                        "prev_page_url",
                        "to",
                        "total"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/pix/qrcode": {
      "post": {
        "operationId": "v1.pix.qrcode.create",
        "description": "Generates a QR code for a new PIX transaction.",
        "summary": "[PIX] Create a new PIX QR Code",
        "tags": [
          "Transactions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateQrCodeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction_id": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "created_at": {
                          "type": "object"
                        },
                        "expires_at": {
                          "type": "string"
                        },
                        "qr_code": {
                          "type": "string"
                        },
                        "br_code": {
                          "type": "string"
                        },
                        "status": {
                          "$ref": "#/components/schemas/TransactionStatus"
                        }
                      },
                      "required": [
                        "transaction_id",
                        "amount",
                        "fee",
                        "created_at",
                        "expires_at",
                        "qr_code",
                        "br_code",
                        "status"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          }
        }
      }
    },
    "/v1/pix/cashout": {
      "post": {
        "operationId": "v1.pix.cashout.request",
        "description": "Handles the cashout request for a specific customer.",
        "summary": "[PIX] Request a cashout via PIX",
        "tags": [
          "Transactions"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/RequestCashoutRequest"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "description": "The amount to be cashed out.",
                        "example": 0.01
                      },
                      "pix_key": {
                        "type": "string",
                        "description": "The PIX key for the transaction.",
                        "example": "example@pix.com"
                      },
                      "customer_id": {
                        "type": "string",
                        "description": "The UUID of the customer.",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                      },
                      "description": {
                        "type": "string",
                        "description": "A description for the transaction.",
                        "example": "Payment for services"
                      }
                    },
                    "required": [
                      "amount",
                      "pix_key",
                      "customer_id"
                    ]
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return success response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Cashout request processed successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "transaction_id": {
                          "type": "string"
                        },
                        "customer_id": {
                          "type": "string"
                        },
                        "amount": {
                          "type": "string"
                        },
                        "fee": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "transaction_id",
                        "customer_id",
                        "amount",
                        "fee"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "403": {
            "$ref": "#/components/responses/AuthorizationException"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string",
                      "example": "Customer not found"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "customer_id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "customer_id"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationException"
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Internal server error"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Company contract or wallet not found"
                        }
                      },
                      "required": [
                        "message"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/transactions/{transaction}": {
      "get": {
        "operationId": "v1.transaction.checkStatus",
        "description": "This endpoint allows you to check the status of a transaction by its ID.\n\n>The fields `qr_code`, `br_code`, and `expires_at` are only available when the transaction type is Pix.",
        "summary": "Check Transaction",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "name": "transaction",
            "in": "path",
            "required": true,
            "description": "The id of the transaction.",
            "schema": {
              "type": "string"
            },
            "example": "123e4567-e89b-12d3-a456-426614174000"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "$ref": "#/components/schemas/TransactionStatus"
                        },
                        "type": {
                          "$ref": "#/components/schemas/TransactionType"
                        },
                        "method": {
                          "$ref": "#/components/schemas/TransactionMethods"
                        },
                        "amount": {
                          "type": "number"
                        },
                        "fee": {
                          "type": "number"
                        },
                        "qr_code": {
                          "type": "string"
                        },
                        "br_code": {
                          "type": "string"
                        },
                        "expires_at": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "status",
                        "type",
                        "method",
                        "amount",
                        "fee"
                      ]
                    }
                  },
                  "required": [
                    "success",
                    "message",
                    "data"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "http": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "CancelSubscriptionRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          }
        },
        "title": "CancelSubscriptionRequest"
      },
      "CreateCustomerRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "'John Doe'"
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "john@doe.com"
          },
          "phone_number": {
            "type": "string",
            "example": "1111111111"
          },
          "document": {
            "type": "string",
            "example": "11111111111"
          }
        },
        "required": [
          "name",
          "email",
          "phone_number",
          "document"
        ],
        "title": "CreateCustomerRequest"
      },
      "CreateQrCodeRequest": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": "Charge amount",
            "minimum": 0.01
          },
          "customer_id": {
            "type": "string",
            "example": "Customer id"
          },
          "description": {
            "type": [
              "string",
              "null"
            ],
            "example": "Message that will appear when the PIX is paid for."
          },
          "expires_at": {
            "type": [
              "integer",
              "null"
            ],
            "example": "Expires time in seconds",
            "minimum": 60
          },
          "splits": {
            "type": [
              "array",
              "null"
            ],
            "example": "Transaction division splits",
            "items": {
              "type": "object",
              "properties": {
                "slug": {
                  "type": "string",
                  "example": "Company split slug"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "percentage",
                    "fixed"
                  ],
                  "example": "Split type that can be percentage or fixed"
                },
                "value": {
                  "type": "number",
                  "example": "Split value",
                  "minimum": 0
                }
              },
              "required": [
                "slug",
                "type",
                "value"
              ]
            }
          }
        },
        "required": [
          "amount",
          "customer_id"
        ],
        "title": "CreateQrCodeRequest"
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "properties": {
          "customer_id": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440001"
          },
          "plan_id": {
            "type": "string",
            "example": "550e8400-e29b-41d4-a716-446655440002"
          },
          "payment_method": {
            "type": "string",
            "example": "pix"
          }
        },
        "required": [
          "customer_id",
          "plan_id",
          "payment_method"
        ],
        "title": "CreateSubscriptionRequest"
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "uuid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone_number": {
            "type": "integer"
          },
          "document": {
            "type": "string"
          },
          "created_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          },
          "updated_at": {
            "type": [
              "string",
              "null"
            ],
            "format": "date-time"
          }
        },
        "required": [
          "id",
          "uuid",
          "name",
          "email",
          "phone_number",
          "document",
          "created_at",
          "updated_at"
        ],
        "title": "Customer"
      },
      "RequestCashoutRequest": {
        "type": "object",
        "title": "RequestCashoutRequest"
      },
      "SuspendSubscriptionRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": [
              "string",
              "null"
            ],
            "maxLength": 255
          }
        },
        "title": "SuspendSubscriptionRequest"
      },
      "TransactionMethods": {
        "type": "string",
        "enum": [
          "pix",
          "credit_card"
        ],
        "title": "TransactionMethods"
      },
      "TransactionStatus": {
        "type": "string",
        "enum": [
          "pending",
          "confirmed",
          "completed",
          "failed",
          "cancelled",
          "refunded",
          "dispute",
          "processing_refund"
        ],
        "title": "TransactionStatus"
      },
      "TransactionType": {
        "type": "string",
        "enum": [
          "cash_in",
          "cash_out"
        ],
        "title": "TransactionType"
      }
    },
    "responses": {
      "ValidationException": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Errors overview."
                },
                "errors": {
                  "type": "object",
                  "description": "A detailed description of each field that failed validation.",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "required": [
                "message",
                "errors"
              ]
            }
          }
        }
      },
      "AuthorizationException": {
        "description": "Authorization error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "description": "Error overview."
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      }
    }
  }
}